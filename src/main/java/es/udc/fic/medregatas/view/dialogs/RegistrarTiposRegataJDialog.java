/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package es.udc.fic.medregatas.view.dialogs;

import es.udc.fic.medregatas.model.regata.Regata;
import es.udc.fic.medregatas.model.service.RegataService;
import es.udc.fic.medregatas.model.tipo.Tipo;
import es.udc.fic.medregatas.view.MainAppjFrame;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JDialog;
import javax.swing.JList;

/**
 *
 * @author iago
 */
public class RegistrarTiposRegataJDialog extends javax.swing.JDialog {

    private MainAppjFrame parent;
    private Regata regata;

    private RegataService regataService;

    /**
     * Creates new form RegistrarTiposRegataJDialog
     */
    public RegistrarTiposRegataJDialog(MainAppjFrame parent, Regata regata,
            List<Tipo> tiposAsociados) {

        super(parent, true);
        initComponents();

        this.parent = parent;
        this.regata = regata;

        this.regataService = parent.getAppContext().getBean(RegataService.class);

        // Metemos al jList de tipos del sistema todos los tipos conocidos, menos
        // los que ya hemos asociado.
        List<Tipo> tiposSistema = new ArrayList<Tipo>();
        for(Tipo t : regataService.getTipos()){
            if(tiposAsociados==null || !tiposAsociados.contains(t)){
                tiposSistema.add(t);
            }
        }
        tiposSistemajList.setListData(tiposSistema.toArray());

        if (tiposAsociados == null) {
            List<Tipo> regataTipos = regataService.getTiposAsociadosByRegata(regata);
            tiposSeleccionadosjList.setListData(regataTipos.toArray());
        } else {
            tiposSeleccionadosjList.setListData(tiposAsociados.toArray());
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tiposSistemajList = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        tiposSeleccionadosjList = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        AnadirjButton = new javax.swing.JButton();
        atrasjButton = new javax.swing.JButton();
        sigjButton = new javax.swing.JButton();
        CancelButton = new javax.swing.JButton();
        BorrarjButton = new javax.swing.JButton();
        crearjButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Crear Regata");
        setMinimumSize(new java.awt.Dimension(400, 300));

        tiposSistemajList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        tiposSistemajList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tiposSistemajListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tiposSistemajList);

        tiposSeleccionadosjList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        tiposSeleccionadosjList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tiposSeleccionadosjListMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tiposSeleccionadosjList);

        jLabel1.setText("Clases Conocidas");

        jLabel2.setText("Clases de la Regata");

        AnadirjButton.setText("Añadir");
        AnadirjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnadirjButtonActionPerformed(evt);
            }
        });

        atrasjButton.setText("Atrás");
        atrasjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atrasjButtonActionPerformed(evt);
            }
        });

        sigjButton.setText("Siguiente");
        sigjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sigjButtonActionPerformed(evt);
            }
        });

        CancelButton.setText("Cancelar");
        CancelButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CancelButtonMouseClicked(evt);
            }
        });

        BorrarjButton.setText("Borrar");
        BorrarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BorrarjButtonActionPerformed(evt);
            }
        });

        crearjButton.setText("Crear Tipo");
        crearjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crearjButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("Selecciona las clases de barcos que desees incluir:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(BorrarjButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(crearjButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(AnadirjButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 4, Short.MAX_VALUE))
                            .addComponent(jScrollPane2)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(CancelButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(atrasjButton)
                        .addGap(18, 18, 18)
                        .addComponent(sigjButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(AnadirjButton)
                                .addGap(18, 18, 18)
                                .addComponent(BorrarjButton)
                                .addGap(18, 18, 18)
                                .addComponent(crearjButton)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane1))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(atrasjButton)
                    .addComponent(sigjButton)
                    .addComponent(CancelButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sigjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sigjButtonActionPerformed

        //Sacamos los tipos seleccionados de la lista
        List<Tipo> tiposAsociados = new ArrayList<Tipo>();
        for (int i = 0; i < tiposSeleccionadosjList.getModel().getSize(); i++) {
            tiposAsociados.add((Tipo) tiposSeleccionadosjList.getModel().getElementAt(i));
        }

        setVisible(false);
        dispose();

        //Se los pasamos al soguiente jDialog
        JDialog dialog = new RegistrarBarcosRegataJDialog(parent, regata,
                tiposAsociados);
        dialog.setLocationRelativeTo(null);
        dialog.setVisible(true);

    }//GEN-LAST:event_sigjButtonActionPerformed

    private void atrasjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atrasjButtonActionPerformed

        setVisible(false);
        dispose();

        JDialog dialog = new RegistrarDatosRegataJDialog(parent, regata);
        dialog.setLocationRelativeTo(null);
        dialog.setVisible(true);
    }//GEN-LAST:event_atrasjButtonActionPerformed

    private void CancelButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CancelButtonMouseClicked
        setVisible(false);
        dispose();
    }//GEN-LAST:event_CancelButtonMouseClicked

    private void AnadirjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnadirjButtonActionPerformed
        if (AnadirjButton.isEnabled()) {
            vasculateSelectedElement(tiposSistemajList, tiposSeleccionadosjList);

        }
    }//GEN-LAST:event_AnadirjButtonActionPerformed

    private void BorrarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BorrarjButtonActionPerformed
        if (BorrarjButton.isEnabled()) {
            vasculateSelectedElement(tiposSeleccionadosjList, tiposSistemajList);
        }
    }//GEN-LAST:event_BorrarjButtonActionPerformed

    private void tiposSistemajListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tiposSistemajListMouseClicked
        AnadirjButton.setEnabled(true);
        BorrarjButton.setEnabled(false);

    }//GEN-LAST:event_tiposSistemajListMouseClicked

    private void tiposSeleccionadosjListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tiposSeleccionadosjListMouseClicked
        AnadirjButton.setEnabled(false);
        BorrarjButton.setEnabled(true);
    }//GEN-LAST:event_tiposSeleccionadosjListMouseClicked

    private void crearjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crearjButtonActionPerformed

        JDialog dialog = new NuevoTipoJDialog(parent, true, null);
        dialog.setLocationRelativeTo(null);
        dialog.setVisible(true);
        
        refrescarTiposSistemaJList();
    }//GEN-LAST:event_crearjButtonActionPerformed

    private void refrescarTiposSistemaJList() {
        List<Tipo> tipos = regataService.getTipos();
        
        //Cogemos los tipos del sistema que no han sido seleccionados
        for(int i=0; i< tiposSeleccionadosjList.getModel().getSize() ; i++){
            Tipo t = (Tipo) tiposSeleccionadosjList.getModel().getElementAt(i);
            if(tipos.contains(t)){
                tipos.remove(t);
            }
        }
        //Los introducimos en la lista
        tiposSistemajList.setListData(tipos.toArray());
    }
        
    /**
     * Mueve el elemento seleccionado, si lo hay, de fromList a toList
     * 
     * @param fromList
     * @param toList 
     */
    private void vasculateSelectedElement(JList fromList, JList toList) {
        if (fromList.getSelectedIndex() != -1) {

            Object object = fromList.getSelectedValue();

            //Borramos el elemento
            DefaultListModel modelOrigen = new DefaultListModel();
            for (int i = 0; i < fromList.getModel().getSize(); i++) {
                if (i != fromList.getSelectedIndex()) {
                    Object o = fromList.getModel().getElementAt(i);
                    modelOrigen.addElement(o);
                }
            }
            fromList.setModel(modelOrigen);

            DefaultListModel modelDestino = new DefaultListModel();
            for (int i = 0; i < toList.getModel().getSize(); i++) {
                Object o = toList.getModel().getElementAt(i);
                modelDestino.addElement(o);
            }
            modelDestino.addElement(object);
            toList.setModel(modelDestino);
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AnadirjButton;
    private javax.swing.JButton BorrarjButton;
    private javax.swing.JButton CancelButton;
    private javax.swing.JButton atrasjButton;
    private javax.swing.JButton crearjButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton sigjButton;
    private javax.swing.JList tiposSeleccionadosjList;
    private javax.swing.JList tiposSistemajList;
    // End of variables declaration//GEN-END:variables

}
